# Generated by Django 5.2.5 on 2025-09-06 22:46

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0008_subscription'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableDay',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day', models.CharField(choices=[('saturday', 'Saturday'), ('sunday', 'Sunday'), ('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday')], max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='AvailableTimeSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('available_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='teacher.availableday')),
            ],
        ),
        migrations.CreateModel(
            name='SessionOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('training_type', models.CharField(choices=[('virtual', 'Virtual Training'), ('mindset', 'Mindset Training'), ('in_person', 'In Person Training')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('close_before', models.DurationField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session', to='account.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='BookedSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_time', models.DateTimeField()),
                ('duration', models.PositiveIntegerField(default=60)),
                ('is_paid', models.BooleanField(default=False)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_sessions_as_student', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_sessions_as_teacher', to='account.teacher')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_sessions', to='teacher.sessionoption')),
            ],
        ),
        migrations.AddField(
            model_name='availableday',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_days', to='teacher.sessionoption'),
        ),
        migrations.CreateModel(
            name='RatingReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField()),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_rating', to='account.student')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_rating', to='account.teacher')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('teacher', 'student')},
            },
        ),
    ]
